              ====================================================================
                             Lexical Analyzer for the C Language
              ====================================================================


// Mixture of tests, comments   |    SINGLE LINE COMMENT               

 #include<stdio.h>   |    Pre Processor directive                 
 int |   KEYWORD                          |
 main |   KEYWORD                          |
 (   |    OPENING BRACKETS                |
 )   |    CLOSING BRACKETS	         |
 {   |    OPENING BRACES                  |
 int |   KEYWORD                          |
 a  |     IDENTIFIER                      |
 ,   |   COMMA DELIMITER                  |
 b  |     IDENTIFIER                      |
 ;   |    SEMICOLON DELIMITER             |
 char |   KEYWORD                          |
 c  |     IDENTIFIER                      |
 ;   |    SEMICOLON DELIMITER             |
 for |   KEYWORD                          |
 (   |    OPENING BRACKETS                |
 a  |     IDENTIFIER                      |
 =   |    OPERATOR                        |
 0   |    NUMBER CONSTANT                 |
 ;   |    SEMICOLON DELIMITER             |
 a  |     IDENTIFIER                      |
 <   |    OPERATOR                        |
 29   |    NUMBER CONSTANT                 |
 ;   |    SEMICOLON DELIMITER             |
 a  |     IDENTIFIER                      |
 ++   |    OPERATOR                        |
 )   |    CLOSING BRACKETS	         |
 {   |    OPENING BRACES                  |
 if |   KEYWORD                          |
 (   |    OPENING BRACKETS                |
 a  |     IDENTIFIER                      |
 <   |    OPERATOR                        |
 15   |    NUMBER CONSTANT                 |
 )   |    CLOSING BRACKETS	         |
 {   |    OPENING BRACES                  |
 printf  |     IDENTIFIER                      |
 (   |    OPENING BRACKETS                |
 "Hello World"   |    STRING CONSTANT |
 )   |    CLOSING BRACKETS	         |
 ;   |    SEMICOLON DELIMITER             |
 }   |    CLOSING BRACES                  |
 }   |    CLOSING BRACES                  |
 int |   KEYWORD                          |
 x  |     IDENTIFIER                      |
 =   |    OPERATOR                        |
 a  |     IDENTIFIER                      |
 +   |    OPERATOR                        |
 b  |     IDENTIFIER                      |
 ;   |    SEMICOLON DELIMITER             |

// Single Line Comment   |    SINGLE LINE COMMENT               


/* This is a 
	   multi-line comment */   |    MULTI LINE COMMENT                   |

 int |   KEYWORD                          |
 var1  |     IDENTIFIER                      |
 ;   |    SEMICOLON DELIMITER             |
 char |   KEYWORD                          |
 var2  |     IDENTIFIER                      |
 ;   |    SEMICOLON DELIMITER             |
 printf  |     IDENTIFIER                      |
 (   |    OPENING BRACKETS                |
 "%d"   |    STRING CONSTANT |
 ,   |   COMMA DELIMITER                  |
 x  |     IDENTIFIER                      |
 )   |    CLOSING BRACKETS	         |
 ;   |    SEMICOLON DELIMITER             |
 }   |    CLOSING BRACES                  |



  ============================
         SYMBOL TABLE
  ============================

  a	|	   IDENTIFIER
  b	|	   IDENTIFIER
  c	|	   IDENTIFIER
  x	|	   IDENTIFIER
  for	|	KEYWORD
  char	|	KEYWORD
  if	|	KEYWORD
  int	|	KEYWORD
  main	|	KEYWORD
  var1	|	   IDENTIFIER
  var2	|	   IDENTIFIER
  printf	|	   IDENTIFIER



  ===============================
         CONSTANT TABLE
  ===============================
  "Hello World"	|	STRING CONSTANT
  "%d"	|	STRING CONSTANT
  15	|	   NUMBER CONSTANT
  29	|	   NUMBER CONSTANT
  0	|	   NUMBER CONSTANT

